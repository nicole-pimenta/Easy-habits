{"ast":null,"code":"var _jsxFileName = \"/home/nicole/Desktop/1.Kenzie/Q2/3.SP3/gestao-de-habitos/src/Providers/Auth/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport api from \"../../services/api\";\nimport jwt_decode from \"jwt-decode\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n\n  const token = localStorage.getItem(\"Habits:token\") || \"\";\n  const [auth, setAuth] = useState(token);\n\n  const logIn = (data, history) => {\n    api.post(\"/sessions/\", data).then(response => {\n      // token\n      const token = response.data.access; // localStorage.clear();\n\n      localStorage.setItem(\"Habits:token\", JSON.stringify(token));\n      setAuth(token); // user\n\n      const decodingUserId = jwt_decode(token);\n      localStorage.setItem(\"Habits:userId\", JSON.stringify(decodingUserId.user_id));\n      toast.success(\"Sucesso ao fazer login\");\n      history.push(\"/dashboard\");\n    }).catch(err => {\n      toast.error(\"Nome de usuário ou senha inválidos!\");\n    });\n  };\n\n  const logOut = () => {\n    setAuth(\"\");\n    localStorage.clear();\n    toast.success(\"Até breve!\");\n  };\n\n  const userId = localStorage.getItem(\"Habits:userId\");\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token: auth,\n      setAuth,\n      userId,\n      logIn,\n      logOut\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"cw8H2zgUawHI++vRRvwOo+PDXPM=\");\n\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n\n  return useContext(AuthContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/nicole/Desktop/1.Kenzie/Q2/3.SP3/gestao-de-habitos/src/Providers/Auth/index.js"],"names":["createContext","useContext","useState","api","jwt_decode","toast","AuthContext","AuthProvider","children","token","localStorage","getItem","auth","setAuth","logIn","data","history","post","then","response","access","setItem","JSON","stringify","decodingUserId","user_id","success","push","catch","err","error","logOut","clear","userId","useAuth"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,OAAO,MAAMC,WAAW,gBAAGN,aAAa,EAAjC;AAEP,OAAO,MAAMO,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC5C,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,KAAwC,EAAtD;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAACO,KAAD,CAAhC;;AAEA,QAAMK,KAAK,GAAG,CAACC,IAAD,EAAOC,OAAP,KAAmB;AAC/Bb,IAAAA,GAAG,CACAc,IADH,CACQ,YADR,EACsBF,IADtB,EAEGG,IAFH,CAESC,QAAD,IAAc;AAClB;AACA,YAAMV,KAAK,GAAGU,QAAQ,CAACJ,IAAT,CAAcK,MAA5B,CAFkB,CAGlB;;AACAV,MAAAA,YAAY,CAACW,OAAb,CAAqB,cAArB,EAAqCC,IAAI,CAACC,SAAL,CAAed,KAAf,CAArC;AACAI,MAAAA,OAAO,CAACJ,KAAD,CAAP,CALkB,CAOlB;;AACA,YAAMe,cAAc,GAAGpB,UAAU,CAACK,KAAD,CAAjC;AACAC,MAAAA,YAAY,CAACW,OAAb,CACE,eADF,EAEEC,IAAI,CAACC,SAAL,CAAeC,cAAc,CAACC,OAA9B,CAFF;AAKApB,MAAAA,KAAK,CAACqB,OAAN,CAAc,wBAAd;AACAV,MAAAA,OAAO,CAACW,IAAR,CAAa,YAAb;AACD,KAlBH,EAmBGC,KAnBH,CAmBUC,GAAD,IAAS;AACdxB,MAAAA,KAAK,CAACyB,KAAN,CAAY,qCAAZ;AACD,KArBH;AAsBD,GAvBD;;AAyBA,QAAMC,MAAM,GAAG,MAAM;AACnBlB,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAH,IAAAA,YAAY,CAACsB,KAAb;AACA3B,IAAAA,KAAK,CAACqB,OAAN,CAAc,YAAd;AACD,GAJD;;AAMA,QAAMO,MAAM,GAAGvB,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAf;AAEA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AAAEF,MAAAA,KAAK,EAAEG,IAAT;AAAeC,MAAAA,OAAf;AAAwBoB,MAAAA,MAAxB;AAAgCnB,MAAAA,KAAhC;AAAuCiB,MAAAA;AAAvC,KADT;AAAA,cAGGvB;AAHH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA5CM;;GAAMD,Y;;KAAAA,Y;AA8Cb,OAAO,MAAM2B,OAAO,GAAG;AAAA;;AAAA,SAAMjC,UAAU,CAACK,WAAD,CAAhB;AAAA,CAAhB;;IAAM4B,O","sourcesContent":["import { createContext, useContext, useState } from \"react\";\nimport api from \"../../services/api\";\nimport jwt_decode from \"jwt-decode\";\nimport { toast } from \"react-toastify\";\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const token = localStorage.getItem(\"Habits:token\") || \"\";\n  const [auth, setAuth] = useState(token);\n\n  const logIn = (data, history) => {\n    api\n      .post(\"/sessions/\", data)\n      .then((response) => {\n        // token\n        const token = response.data.access;\n        // localStorage.clear();\n        localStorage.setItem(\"Habits:token\", JSON.stringify(token));\n        setAuth(token);\n\n        // user\n        const decodingUserId = jwt_decode(token);\n        localStorage.setItem(\n          \"Habits:userId\",\n          JSON.stringify(decodingUserId.user_id)\n        );\n\n        toast.success(\"Sucesso ao fazer login\");\n        history.push(\"/dashboard\");\n      })\n      .catch((err) => {\n        toast.error(\"Nome de usuário ou senha inválidos!\");\n      });\n  };\n\n  const logOut = () => {\n    setAuth(\"\");\n    localStorage.clear();\n    toast.success(\"Até breve!\");\n  };\n\n  const userId = localStorage.getItem(\"Habits:userId\");\n\n  return (\n    <AuthContext.Provider\n      value={{ token: auth, setAuth, userId, logIn, logOut }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"]},"metadata":{},"sourceType":"module"}