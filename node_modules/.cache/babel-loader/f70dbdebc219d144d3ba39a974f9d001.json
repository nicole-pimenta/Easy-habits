{"ast":null,"code":"var _jsxFileName = \"/home/nicole/Desktop/1.Kenzie/Q2/3.SP3/gestao-de-habitos/src/Providers/Activities/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport api from \"../../services/api\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ActivitiesContext = /*#__PURE__*/createContext();\nexport const ActivitiesProvider = ({\n  children\n}) => {\n  _s();\n\n  const [groupActivities, setGroupActivities] = useState([]);\n  const [specificActivitie, setSpecificActivitie] = useState([]);\n  const [token] = useState(JSON.parse(localStorage.getItem(\"Habits:token\")) || \"\");\n\n  const getOneActivitie = ({\n    activitie_id\n  }) => {\n    api.get(`goals/${activitie_id}/`).then(res => setSpecificActivitie(res)).catch(e => console.log(e));\n  };\n\n  const getGroupActivities = ({\n    group_id\n  }) => {\n    api.get(`/activities/?group=${group_id}`).then(res => setGroupActivities(res)).catch(e => console.log(e));\n  };\n\n  const addNewGroupActivitie = ({\n    title,\n    realization_time,\n    group_id\n  }) => {\n    api.post(\"/activities/\", {\n      title: title,\n      realization_time: realization_time,\n      group: group_id\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(_ => toast.success('Nova atividade criada'));\n  };\n\n  const updateGroupActivities = ({\n    activitie_id,\n    title\n  }) => {\n    api.patch(`/activities/${activitie_id}/`, {\n      title: title\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(_ => toast.success('Atividade Atualizada'));\n  };\n\n  const deleteGroupActivities = ({\n    activitie_id\n  }) => {\n    api.delete(`/activities/${activitie_id}/`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(_ => toast.success('Atividade deletada'));\n  };\n\n  return /*#__PURE__*/_jsxDEV(ActivitiesContext.Provider, {\n    value: {\n      groupActivities,\n      specificActivitie,\n      getOneActivitie,\n      getGroupActivities,\n      addNewGroupActivitie,\n      updateGroupActivities,\n      deleteGroupActivities\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ActivitiesProvider, \"UdaGZG4y4RWtnAyllbybhEY/vdU=\");\n\n_c = ActivitiesProvider;\nexport const useActivities = () => {\n  _s2();\n\n  return useContext(ActivitiesContext);\n};\n\n_s2(useActivities, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ActivitiesProvider\");","map":{"version":3,"sources":["/home/nicole/Desktop/1.Kenzie/Q2/3.SP3/gestao-de-habitos/src/Providers/Activities/index.js"],"names":["createContext","useContext","useState","api","toast","ActivitiesContext","ActivitiesProvider","children","groupActivities","setGroupActivities","specificActivitie","setSpecificActivitie","token","JSON","parse","localStorage","getItem","getOneActivitie","activitie_id","get","then","res","catch","e","console","log","getGroupActivities","group_id","addNewGroupActivitie","title","realization_time","post","group","headers","Authorization","_","success","updateGroupActivities","patch","deleteGroupActivities","delete","useActivities"],"mappings":"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","sourcesContent":["import { createContext, useContext, useState } from \"react\";\nimport api from \"../../services/api\";\nimport { toast } from \"react-toastify\";\n\nexport const ActivitiesContext = createContext();\n\nexport const ActivitiesProvider = ({ children }) => {\n\n    const [groupActivities, setGroupActivities] = useState([]);\n    const [specificActivitie, setSpecificActivitie] = useState([])\n    const [token] = useState(\n        JSON.parse(localStorage.getItem(\"Habits:token\")) || \"\"\n    );\n\n\n    const getOneActivitie = ({ activitie_id }) => {\n        api.get(\n            `goals/${activitie_id}/`\n        )\n            .then((res) => setSpecificActivitie(res))\n            .catch((e) => console.log(e))\n    }\n\n    const getGroupActivities = ({ group_id }) => {\n        api.get(\n            `/activities/?group=${group_id}`\n        )\n            .then((res) => setGroupActivities(res))\n            .catch((e) => console.log(e))\n    }\n\n    const addNewGroupActivitie = ({ title, realization_time, group_id }) => {\n        api.post(\n            \"/activities/\",\n            {\n                title: title,\n                realization_time: realization_time,\n                group: group_id\n            },\n            {\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            }\n        )\n            .then((_) => toast.success('Nova atividade criada'))\n    };\n\n    const updateGroupActivities = ({ activitie_id, title }) => {\n        api.patch(\n            `/activities/${activitie_id}/`,\n            {\n                title: title,\n            },\n            {\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            }\n        )\n            .then((_) => toast.success('Atividade Atualizada'))\n    };\n\n    const deleteGroupActivities = ({ activitie_id }) => {\n        api.delete(\n            `/activities/${activitie_id}/`,\n            {\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            }\n        )\n            .then((_) => toast.success('Atividade deletada'))\n    };\n\n    return (\n        <ActivitiesContext.Provider\n            value={{ groupActivities, specificActivitie, getOneActivitie, getGroupActivities, addNewGroupActivitie, updateGroupActivities, deleteGroupActivities }}\n        >\n            {children}\n        </ActivitiesContext.Provider>\n    );\n};\n\nexport const useActivities = () => useContext(ActivitiesContext);"]},"metadata":{},"sourceType":"module"}