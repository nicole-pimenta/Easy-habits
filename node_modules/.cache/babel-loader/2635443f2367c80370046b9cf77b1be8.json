{"ast":null,"code":"var _jsxFileName = \"/home/nicole/Desktop/1.Kenzie/Q2/3.SP3/gestao-de-habitos/src/pages/Group/index.js\",\n    _s = $RefreshSig$();\n\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useParams } from \"react-router-dom\";\nimport { useGroups } from \"../../Providers/Groups\";\nimport { useState, useEffect } from \"react\";\nimport { GroupContainer, InfoContainer, BottomContainer, FormModal, FormContainer, GoalsCard } from \"./style\";\nimport LottieAnimation from \"../../components/Lotties\";\nimport Animation from \"../../assets/AnimationGroup.json\";\nimport Button from \"../../components/Button\";\nimport { useGoals } from \"../../Providers/Goals\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Group = () => {\n  _s();\n\n  var _errors$title, _errors$difficulty;\n\n  const {\n    groups\n  } = useGroups();\n  const {\n    id\n  } = useParams();\n  const idNum = Number(id);\n  const {\n    groupGoals,\n    specificGoal,\n    addNewGroupGoal,\n    getOneGoal,\n    getGroupGoals,\n    updateGroupGoal,\n    deleteGroupGoal\n  } = useGoals();\n  console.log(groupGoals);\n  const [openForm, setOpenForm] = useState(false);\n  const [openGroup, setOpenGroup] = useState(true);\n  const schema = yup.object().shape({\n    title: yup.string().required(\"Defina uma meta para o grupo\"),\n    difficulty: yup.string().required(\"Selecione entre Fácil, Média ou Difícil\")\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n  const handleForm = data => {\n    addNewGroupGoal(data, idNum);\n    setOpenForm(false);\n    setOpenGroup(true);\n    getGroupGoals(idNum);\n  };\n\n  useEffect(() => {\n    getGroupGoals(idNum); // eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FormModal, {\n      children: openForm && /*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Meta do grupo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Juntos podemos mais!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(handleForm),\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            placeholder: \"Meta\",\n            ...register(\"title\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: [\" \", (_errors$title = errors.title) === null || _errors$title === void 0 ? void 0 : _errors$title.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            placeholder: \"Dificuldade\",\n            ...register(\"difficulty\"),\n            helperText: \"F\\xE1cil, M\\xE9dia ou Dif\\xEDcil\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: [\" \", (_errors$difficulty = errors.difficulty) === null || _errors$difficulty === void 0 ? void 0 : _errors$difficulty.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Adicionar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n            cursor: \"pointer\",\n            onClick: () => document.location.reload()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), openGroup && /*#__PURE__*/_jsxDEV(GroupContainer, {\n      children: [groups.filter(group => group.id === idNum).map((group, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infoWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"groupName\",\n          children: group.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(InfoContainer, {\n          children: [/*#__PURE__*/_jsxDEV(LottieAnimation, {\n            lotti: Animation,\n            height: 500,\n            width: 400\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"groupDescription\",\n              children: [\" \", \"Este grupo \\xE9 da categoria\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\" \", group.category]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 23\n              }, this), \" e seu objetivo \\xE9\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\" \", group.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                setOpenForm(true);\n                setOpenGroup(false);\n              },\n              children: [\" \", \"+ Definir Meta\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              colorSchema: true,\n              children: \"+ Criar Atividade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }, this)), /*#__PURE__*/_jsxDEV(BottomContainer, {\n        children: /*#__PURE__*/_jsxDEV(GoalsCard, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Metas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"goalsWrapper\",\n            children: groupGoals.map((goal, index) => /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [goal.title, /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"iconsWrapper\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"done\",\n                    children: /*#__PURE__*/_jsxDEV(DoneIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"delete\",\n                    children: /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Group, \"n8jNK7vAQk1i6p43WRrgstFNKzg=\", false, function () {\n  return [useGroups, useParams, useGoals, useForm];\n});\n\n_c = Group;\nexport default Group;\n\nvar _c;\n\n$RefreshReg$(_c, \"Group\");","map":{"version":3,"sources":["/home/nicole/Desktop/1.Kenzie/Q2/3.SP3/gestao-de-habitos/src/pages/Group/index.js"],"names":["useForm","yup","yupResolver","TextField","useParams","useGroups","useState","useEffect","GroupContainer","InfoContainer","BottomContainer","FormModal","FormContainer","GoalsCard","LottieAnimation","Animation","Button","useGoals","ArrowBackIcon","DeleteForeverIcon","DoneIcon","Group","groups","id","idNum","Number","groupGoals","specificGoal","addNewGroupGoal","getOneGoal","getGroupGoals","updateGroupGoal","deleteGroupGoal","console","log","openForm","setOpenForm","openGroup","setOpenGroup","schema","object","shape","title","string","required","difficulty","register","handleSubmit","formState","errors","resolver","handleForm","data","message","document","location","reload","filter","group","map","index","name","category","description","goal"],"mappings":"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","sourcesContent":["import { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useParams } from \"react-router-dom\";\nimport { useGroups } from \"../../Providers/Groups\";\nimport { useState, useEffect } from \"react\";\nimport {\n  GroupContainer,\n  InfoContainer,\n  BottomContainer,\n  FormModal,\n  FormContainer,\n  GoalsCard,\n} from \"./style\";\nimport LottieAnimation from \"../../components/Lotties\";\nimport Animation from \"../../assets/AnimationGroup.json\";\nimport Button from \"../../components/Button\";\nimport { useGoals } from \"../../Providers/Goals\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport DoneIcon from \"@material-ui/icons/Done\";\n\nconst Group = () => {\n  const { groups } = useGroups();\n  const { id } = useParams();\n  const idNum = Number(id);\n  const {\n    groupGoals,\n    specificGoal,\n    addNewGroupGoal,\n    getOneGoal,\n    getGroupGoals,\n    updateGroupGoal,\n    deleteGroupGoal,\n  } = useGoals();\n\n  console.log(groupGoals);\n\n  const [openForm, setOpenForm] = useState(false);\n  const [openGroup, setOpenGroup] = useState(true);\n\n  const schema = yup.object().shape({\n    title: yup.string().required(\"Defina uma meta para o grupo\"),\n    difficulty: yup\n      .string()\n      .required(\"Selecione entre Fácil, Média ou Difícil\"),\n  });\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const handleForm = (data) => {\n    addNewGroupGoal(data, idNum);\n    setOpenForm(false);\n    setOpenGroup(true);\n    getGroupGoals(idNum);\n  };\n\n  useEffect(() => {\n    getGroupGoals(idNum);\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      <FormModal>\n        {openForm && (\n          <FormContainer>\n            <h1>Meta do grupo</h1>\n            <h3>Juntos podemos mais!</h3>\n            <form onSubmit={handleSubmit(handleForm)}>\n              <TextField placeholder=\"Meta\" {...register(\"title\")} />\n              <div className=\"error\"> {errors.title?.message}</div>\n              <TextField\n                placeholder=\"Dificuldade\"\n                {...register(\"difficulty\")}\n                helperText=\"Fácil, Média ou Difícil\"\n              />\n              <div className=\"error\"> {errors.difficulty?.message}</div>\n              <Button type=\"submit\">Adicionar</Button>\n            </form>\n            <div>\n              <ArrowBackIcon\n                cursor=\"pointer\"\n                onClick={() => document.location.reload()}\n              />\n            </div>\n          </FormContainer>\n        )}\n      </FormModal>\n      {openGroup && (\n        <GroupContainer>\n          {groups\n            .filter((group) => group.id === idNum)\n            .map((group, index) => (\n              <div className=\"infoWrapper\" key={index}>\n                <div className=\"groupName\">{group.name}</div>\n                <InfoContainer>\n                  <LottieAnimation lotti={Animation} height={500} width={400} />\n                  <div>\n                    <div className=\"groupDescription\">\n                      {\" \"}\n                      Este grupo é da categoria\n                      <strong> {group.category}</strong> e seu objetivo é{\" \"}\n                      <strong> {group.description}</strong>\n                    </div>\n                    <Button\n                      onClick={() => {\n                        setOpenForm(true);\n                        setOpenGroup(false);\n                      }}\n                    >\n                      {\" \"}\n                      + Definir Meta\n                    </Button>\n                    <Button colorSchema>+ Criar Atividade</Button>\n                  </div>\n                </InfoContainer>\n              </div>\n            ))}\n          <BottomContainer>\n            <GoalsCard>\n              <h2>Metas</h2>\n              <div className=\"goalsWrapper\">\n                {groupGoals.map((goal, index) => (\n                  <ul key={index}>\n                    <li>\n                      {goal.title}\n                      <div className=\"iconsWrapper\">\n                        <div className=\"done\">\n                          <DoneIcon />\n                        </div>\n                        <div className=\"delete\">\n                          <DeleteForeverIcon />\n                        </div>\n                      </div>\n                    </li>\n                  </ul>\n                ))}\n              </div>\n            </GoalsCard>\n          </BottomContainer>\n        </GroupContainer>\n      )}\n    </>\n  );\n};\n\nexport default Group;\n"]},"metadata":{},"sourceType":"module"}