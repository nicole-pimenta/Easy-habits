{"ast":null,"code":"var _jsxFileName = \"/home/nicole/Desktop/1.Kenzie/Q2/3.SP3/gestao-de-habitos/src/Providers/Habits/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport api from \"../../services/api\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HabitsContext = /*#__PURE__*/createContext();\nexport const HabitsProvider = ({\n  children\n}) => {\n  _s();\n\n  const [token] = useState(JSON.parse(localStorage.getItem(\"Habits:token\")) || \"\");\n  const [habits, setHabits] = useState([]);\n  const [finishedHabits, setFinishedHabits] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [openNewHabit, setOpenNewHabit] = useState(false);\n  const userId = localStorage.getItem(\"Habits:userId\");\n\n  const loadHabits = () => {\n    api.get(\"/habits/personal/\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      setHabits(response.data.filter(habit => habit.achieved === false));\n      setFinishedHabits(response.data.filter(habit => habit.achieved === true));\n      setLoading(false);\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    loadHabits();\n  });\n\n  const addNewHabit = ({\n    habit,\n    category,\n    difficulty,\n    frequency\n  }) => {\n    console.log(frequency);\n    api.post(\"/habits/\", {\n      title: habit,\n      category: category,\n      difficulty: difficulty,\n      frequency: frequency,\n      achieved: false,\n      how_much_achieved: 0,\n      user: userId\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      loadHabits();\n    });\n    setOpenNewHabit(false);\n  };\n\n  const handleDelete = ({\n    id\n  }) => {\n    api.delete(`/habits/${id}/`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  };\n\n  const handleUpdate = ({\n    id,\n    frequency,\n    how_much_achieved\n  }) => {\n    let achieved = how_much_achieved;\n\n    if (achieved + 9 >= 100 || achieved + 5 >= 100 || achieved + 13 >= 100) {\n      api.patch(`/habits/${id}/`, {\n        achieved: true,\n        how_much_achieved: 100\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    } else if (frequency === \"5\") {\n      api.patch(`/habits/${id}/`, {\n        achieved: false,\n        how_much_achieved: achieved += 100 / 20\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    } else if (frequency === \"3\") {\n      api.patch(`/habits/${id}/`, {\n        achieved: false,\n        how_much_achieved: Math.ceil(achieved += 100 / 12)\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    } else {\n      api.patch(`/habits/${id}/`, {\n        achieved: false,\n        how_much_achieved: Math.ceil(achieved += 100 / 8)\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(HabitsContext.Provider, {\n    value: {\n      habits,\n      addNewHabit,\n      handleDelete,\n      finishedHabits,\n      handleUpdate,\n      loading,\n      openNewHabit,\n      setOpenNewHabit\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HabitsProvider, \"k/32vkPj37e1ZccLD7n+3MDa6uE=\");\n\n_c = HabitsProvider;\nexport const useHabits = () => {\n  _s2();\n\n  return useContext(HabitsContext);\n};\n\n_s2(useHabits, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"HabitsProvider\");","map":{"version":3,"sources":["/home/nicole/Desktop/1.Kenzie/Q2/3.SP3/gestao-de-habitos/src/Providers/Habits/index.js"],"names":["createContext","useContext","useState","api","useEffect","HabitsContext","HabitsProvider","children","token","JSON","parse","localStorage","getItem","habits","setHabits","finishedHabits","setFinishedHabits","loading","setLoading","openNewHabit","setOpenNewHabit","userId","loadHabits","get","headers","Authorization","then","response","data","filter","habit","achieved","catch","err","console","log","addNewHabit","category","difficulty","frequency","post","title","how_much_achieved","user","handleDelete","id","delete","handleUpdate","patch","Math","ceil","useHabits"],"mappings":"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","sourcesContent":["import { createContext, useContext, useState } from \"react\";\nimport api from \"../../services/api\";\nimport { useEffect } from \"react\";\n\nexport const HabitsContext = createContext();\n\nexport const HabitsProvider = ({ children }) => {\n  const [token] = useState(\n    JSON.parse(localStorage.getItem(\"Habits:token\")) || \"\"\n  );\n  const [habits, setHabits] = useState([]);\n  const [finishedHabits, setFinishedHabits] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [openNewHabit, setOpenNewHabit] = useState(false);\n  const userId = localStorage.getItem(\"Habits:userId\");\n\n  const loadHabits = () => {\n    api\n      .get(\"/habits/personal/\", {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((response) => {\n        setHabits(response.data.filter((habit) => habit.achieved === false));\n        setFinishedHabits(\n          response.data.filter((habit) => habit.achieved === true)\n        );\n        setLoading(false);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    loadHabits();\n  });\n\n  const addNewHabit = ({ habit, category, difficulty, frequency }) => {\n    console.log(frequency);\n    api\n      .post(\n        \"/habits/\",\n        {\n          title: habit,\n          category: category,\n          difficulty: difficulty,\n          frequency: frequency,\n          achieved: false,\n          how_much_achieved: 0,\n          user: userId,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      )\n      .then((response) => {\n        loadHabits();\n      });\n\n    setOpenNewHabit(false);\n  };\n\n  const handleDelete = ({ id }) => {\n    api.delete(`/habits/${id}/`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n  };\n\n  const handleUpdate = ({ id, frequency, how_much_achieved }) => {\n    let achieved = how_much_achieved;\n\n    if (achieved + 9 >= 100 || achieved + 5 >= 100 || achieved + 13 >= 100) {\n      api.patch(\n        `/habits/${id}/`,\n        {\n          achieved: true,\n          how_much_achieved: 100,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n    } else if (frequency === \"5\") {\n      api.patch(\n        `/habits/${id}/`,\n        {\n          achieved: false,\n          how_much_achieved: (achieved += 100 / 20),\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n    } else if (frequency === \"3\") {\n      api.patch(\n        `/habits/${id}/`,\n        {\n          achieved: false,\n          how_much_achieved: Math.ceil((achieved += 100 / 12)),\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n    } else {\n      api.patch(\n        `/habits/${id}/`,\n        {\n          achieved: false,\n          how_much_achieved: Math.ceil((achieved += 100 / 8)),\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n    }\n  };\n\n  return (\n    <HabitsContext.Provider\n      value={{\n        habits,\n        addNewHabit,\n        handleDelete,\n        finishedHabits,\n        handleUpdate,\n        loading,\n        openNewHabit,\n        setOpenNewHabit,\n      }}\n    >\n      {children}\n    </HabitsContext.Provider>\n  );\n};\n\nexport const useHabits = () => useContext(HabitsContext);\n"]},"metadata":{},"sourceType":"module"}